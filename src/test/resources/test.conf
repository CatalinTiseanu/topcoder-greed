greed {
    codeRoot    = "."

    logging {
        logLevel    = OFF
        logToStderr = true
        logFolder   = Logs
    }

    shared {
        templateDef {
            test {
                override = false
                outputKey = TestCode
            }
            source {
                override = false
                outputFileName = "${Contest.Name}/${Problem.Name}"
            }
            unittest {
                override = false
                templateFile = None
                outputFileName = "${Contest.Name}/${Problem.Name}Test"
            }
            testcase {
                override = false
                outputFile = "${Contest.Name}/${Problem.Name}.sample"
                templateFile = builtin Testcase.tmpl
                afterGen {
                    execute = /usr/bin/python
                    arguments = [ ./split.py, "${Problem.Name}.sample", "${OutputDir}" ]
                }
            }
            problemDesc {
                override = false
                outputFile = "${Contest.Name}/${Problem.Name}.txt"
                templateFile = builtin ProblemDesc.tmpl
            }
        }

        cstyleLanguage {
            cutBegin = "// CUT begin"
            cutEnd = "// CUT end"
            templates = [ test, source, testcase, problemDesc ]
            submitTemplate = source
        }
    }

    language {
        cpp = ${greed.shared.cstyleLanguage} {
            longIntTypeName = "long long"

            templateDef = ${greed.shared.templateDef} {
                test.templateFile = "builtin C++.gcc.test.tmpl"
                source.templateFile = "builtin C++.source.tmpl"
                source.outputFileExtension = cpp
            }
        }

        java = ${greed.shared.cstyleLanguage}  {
            templateDef = ${greed.shared.templateDef} {
                test.templateFile = "builtin Java.test.tmpl"
                source.templateFile = "builtin Java.source.tmpl"
                source.outputFileExtension = java
                unittest.templateFile = "builtin Java-junit.unittest.tmpl"
            }
        }

        csharp = ${greed.shared.cstyleLanguage}  {
            templateDef = ${greed.shared.templateDef} {
                test.templateFile = "builtin CSharp.test.tmpl"
                source.templateFile = "builtin CSharp.source.tmpl"
                source.outputFileExtension = cs
                unittest.templateFile = "butilin CSharp-nunit.unittest.tmpl"
            }
        }

        python {
            cutBegin = "# CUT begin"
            cutEnd = "# CUT end"

            templateDef = ${greed.shared.templateDef} {
                test.templateFile = "builtin Python.test.tmpl"
                source.templateFile = "builtin Python.source.tmpl"
                source.outputFileExtension = py
            }

            templates = [ test, source, testcase, problemDesc ]
            submitTemplate = source
        }
    }
}
