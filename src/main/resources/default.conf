greed {
    codeRoot    = "."

    logging {
        logLevel    = OFF
        logToStderr = true
        logFolder   = Logs
    }

    shared {
        templateDef {
            test {
                override = false
                outputKey = TestCode
                transformers = [ empty-block, cont-blank-line ]
            }
            filetest {
                override = false
                outputKey = TestCode
                transformers = [ empty-block, cont-blank-line ]
            }
            source {
                override = false
                outputFileName = "${Contest.Name}/${Problem.Name}"
                transformers = [ empty-block, cont-blank-line ]
            }
            unittest {
                override = false
                templateFile = None
                outputFileName = "${Contest.Name}/${Problem.Name}Test"
                transformers = [ empty-block, cont-blank-line ]
            }
            testcase {
                override = false
                outputFile = "${Contest.Name}/${Problem.Name}.sample"
                templateFile = "builtin testcase/testcases.tmpl"
            }
            problem-desc {
                override = false
                outputFile = "${Contest.Name}/${Problem.Name}.html"
                templateFile = "builtin problem/desc.html.tmpl"
            }
            dualcolor-test {
                override = false
                outputKey = TestCode
                templateFile = None
                transformers = [ empty-block, cont-blank-line ]
            }
            dualcolor-tester {
                override = false
                outputFileName = "${Contest.Name}/tester"
                outputFileExtension = None
                templateFile = None
                transformers = [ empty-block, cont-blank-line ]
            }
        }

        defaultLanguage {
            templates = [ filetest, source, testcase, problem-desc ]
            submitTemplate = source
        }

        cstyleLanguage = ${greed.shared.defaultLanguage} {
            cutBegin = "// CUT begin"
            cutEnd = "// CUT end"
        }
    }

    language {
        cpp = ${greed.shared.cstyleLanguage} {
            longIntTypeName = long long

            templateDef = ${greed.shared.templateDef} {
                filetest.templateFile = "builtin filetest/cpp.tmpl"
                test.templateFile = "builtin test/cpp.tmpl"
                dualcolor-test.templateFile = "builtin dualcolor/cpp.tmpl"
                dualcolor-tester.templateFile = "builtin dualcolor/cpp-tester.tmpl"
                dualcolor-tester.outputFileExtension = "cpp"
                source.templateFile = "builtin source/cpp.tmpl"
                source.outputFileExtension = cpp
            }
        }

        java = ${greed.shared.cstyleLanguage} {
            templateDef = ${greed.shared.templateDef} {
                filetest.templateFile = "builtin filetest/java.tmpl"
                test.templateFile = "builtin test/java.tmpl"
                source.templateFile = "builtin source/java.tmpl"
                source.outputFileExtension = java
                unittest.templateFile = "builtin unittest/junit.java.tmpl"
            }
        }

        csharp = ${greed.shared.cstyleLanguage}  {
            templateDef = ${greed.shared.templateDef} {
                filetest.templateFile = "builtin filetest/cs.tmpl"
                test.templateFile = "builtin test/cs.tmpl"
                source.templateFile = "builtin source/cs.tmpl"
                source.outputFileExtension = cs
                unittest.templateFile = "builtin unittest/nunit.cs.tmpl"
            }
        }

        python = ${greed.shared.defaultLanguage}  {
            cutBegin = "# CUT begin"
            cutEnd = "# CUT end"

            templateDef = ${greed.shared.templateDef} {
                filetest.templateFile = "builtin filetest/py.tmpl"
                test.templateFile = "builtin test/py.tmpl"
                dualcolor-test.templateFile = "builtin dualcolor/py.tmpl"
                dualcolor-tester.templateFile = "builtin dualcolor/py-tester.tmpl"
                dualcolor-tester.outputFileExtension = "py"               
                source.templateFile = "builtin source/py.tmpl"
                source.outputFileExtension = py
            }

        }
    }
}
